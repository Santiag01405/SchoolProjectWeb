@model List<SchoolProjectWeb.Models.CourseViewModel>

@{
    ViewData["Title"] = "Lista de Cursos";
}

<h2 class="main-title text-center mb-4">Cursos Registrados</h2>

<div class="row mb-4">
    <div class="col-md-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Buscar por nombre..." />
    </div>
    <div class="col-md-4">
        <select id="dayFilter" class="form-select">
            <option value="all">Todos los días</option>
            <option value="1">Lunes</option>
            <option value="2">Martes</option>
            <option value="3">Miércoles</option>
            <option value="4">Jueves</option>
            <option value="5">Viernes</option>
            <option value="6">Sábado</option>
            <option value="0">Domingo</option>
        </select>
    </div>
</div>

@functions {
    string GetDayName(int day)
    {
        return day switch
        {
            1 => "Lunes",
            2 => "Martes",
            3 => "Miércoles",
            4 => "Jueves",
            5 => "Viernes",
            6 => "Sábado",
            0 => "Domingo",
            _ => "Desconocido"
        };
    }
}

@{
    // Agrupamos por día
    var grupos = Model
        .GroupBy(c => c.DayOfWeek)
        .OrderBy(g => g.Key)
        .ToList();
}

@if (!Model.Any())
{
    <p class="text-muted">No hay cursos registrados.</p>
}
else
{
    foreach (var grupo in grupos)
    {
        <div class="mb-4 card-zoom4 course-group" data-day="@grupo.Key">
            <h4 class="text-secondary border-bottom pb-2">@GetDayName(grupo.Key)</h4>

            @if (!grupo.Any())
            {
                <p class="text-muted">No hay cursos en este día.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-striped align-middle course-table">
                        <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>Nombre</th>
                                <th>Descripción</th>
                                <th>Profesor(es)</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var curso in grupo)
                            {
                                <tr class="course-row" data-name="@curso.Name.ToLower()">
                                    <td>@curso.CourseID</td>
                                    <td>@curso.Name</td>
                                    <td>@curso.Description</td>
                                    <td>@curso.TeacherName</td>
                                    <td>
                                        <a class="btn btn-sm btn-yellow me-1" asp-action="EditCourse" asp-route-id="@curso.CourseID">Editar</a>

                                        <a class="btn btn-sm btn-info btn-lightblue" asp-action="ViewStudentsInCourse" asp-route-courseId="@curso.CourseID">Ver estudiantes</a>

                                        <form asp-action="DeleteCourse" asp-route-id="@curso.CourseID" method="post" style="display:inline;"
                                              onsubmit="return confirm('¿Estás seguro de que deseas eliminar este curso?');">
                                            <button type="submit" class="btn btn-sm btn-danger me-1">Eliminar</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }
}

@section Scripts {
    <script>
        const searchInput = document.getElementById('searchInput');
        const dayFilter = document.getElementById('dayFilter');

        function applyFilters() {
            const searchTerm = searchInput.value.trim().toLowerCase();
            const selectedDay = dayFilter.value;

            // Todas las agrupaciones
            const groups = document.querySelectorAll('.course-group');

            groups.forEach(group => {
                const groupDay = group.getAttribute('data-day');

                // Mostrar/ocultar grupo según filtro día
                if (selectedDay === 'all' || selectedDay === groupDay) {
                    group.style.display = '';
                } else {
                    group.style.display = 'none';
                }

                // Si grupo visible, filtrar filas dentro de la tabla
                if (group.style.display !== 'none') {
                    const rows = group.querySelectorAll('.course-row');
                    let anyVisible = false;

                    rows.forEach(row => {
                        const name = row.getAttribute('data-name');
                        if (name.includes(searchTerm)) {
                            row.style.display = '';
                            anyVisible = true;
                        } else {
                            row.style.display = 'none';
                        }
                    });

                    // Si ninguna fila es visible dentro del grupo, mostrar mensaje "No hay cursos en este día."
                    const noCoursesMessage = group.querySelector('p.text-muted');
                    if (noCoursesMessage) {
                        if (anyVisible) {
                            noCoursesMessage.style.display = 'none';
                        } else {
                            noCoursesMessage.style.display = '';
                        }
                    }
                }
            });
        }

        searchInput.addEventListener('input', applyFilters);
        dayFilter.addEventListener('change', applyFilters);
    </script>
}
